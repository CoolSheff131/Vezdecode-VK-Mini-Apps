{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","React","useState","allLocations","setAllLocations","locationsToDraw","setLocationsToDraw","isPickingLocation","setIsPickingLocation","pickedLocation","setPickedLocation","numberOfPlayers","setNumberOfPlayers","numberOfPlayersToPickCard","setNumberOfPlayersToPickCard","inputNumberOfPlayers","setInputNumberOfPlayers","numberOfSpys","setNumberOfSpys","numberOfSpysToPick","setNumberOfSpysToPick","seconds","setSeconds","isStarted","setIsStarted","timerId","setTimerId","errorFormText","setErrorFormText","locationFormText","setLocationFormText","isAddingLocation","setIsAddingLocation","indexOfChangingLocation","setIndexOfChangingLocation","playerNameFormText","setPlayerNameFormText","players","setPlayers","isShowPlayersLocation","setIsShowPlayersLocation","errorNumberOfPlayerText","setErrorNumberOfPlayerText","useEffect","setInterval","secondsPrev","clearTimeout","bridge","send","level","pickLocation","probToPickSpy","Math","random","isDrawSpy","playersPrev","name","location","randomPickedLocation","floor","length","filter","checkNumberOfPlayers","useCallback","number","Number","isInteger","top","type","value","onChange","e","target","disabled","onClick","defaultValue","isSameLocationName","console","log","addLocation","copyArr","changeLocation","map","style","display","justifyContent","mode","locationName","index","indexOf","startChangeLocation","inputMode","submitNumberOfPlayers","Component","after","prev","player","App","scheme","setScheme","activePanel","setActivePanel","setUser","size","popout","setPopout","user","subscribe","detail","data","fetchData","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d1c0269.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport bridge from '@vkontakte/vk-bridge';\nimport {\n  Panel,\n  PanelHeader,\n  Header,\n  Button,\n  Group,\n  Cell,\n  Div,\n  Input,\n  FormItem,\n  Switch,\n  Avatar,\n  SimpleCell,\n} from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser }) => {\n  const [allLocations, setAllLocations] = React.useState([\n    'Орбитальная станция',\n    'Вечеринка в клубе',\n    'войско крестоносцев',\n    'больница',\n    'больница1',\n    'больница2',\n    'больница3',\n    'больница4',\n    'больница5',\n    'больница6',\n    'больница7',\n  ]);\n  const [locationsToDraw, setLocationsToDraw] = React.useState(allLocations);\n  const [isPickingLocation, setIsPickingLocation] = React.useState(true);\n  const [pickedLocation, setPickedLocation] = React.useState();\n  const [numberOfPlayers, setNumberOfPlayers] = React.useState(0);\n  const [numberOfPlayersToPickCard, setNumberOfPlayersToPickCard] = React.useState(0);\n  const [inputNumberOfPlayers, setInputNumberOfPlayers] = React.useState(1);\n  const [numberOfSpys, setNumberOfSpys] = React.useState(1);\n  const [numberOfSpysToPick, setNumberOfSpysToPick] = React.useState(1);\n  const [seconds, setSeconds] = React.useState(0);\n  const [isStarted, setIsStarted] = React.useState(false);\n  const [timerId, setTimerId] = React.useState(null);\n\n  const [errorFormText, setErrorFormText] = React.useState(null);\n  const [locationFormText, setLocationFormText] = React.useState('');\n  const [isAddingLocation, setIsAddingLocation] = React.useState(true);\n  const [indexOfChangingLocation, setIndexOfChangingLocation] = React.useState(0);\n\n  const [playerNameFormText, setPlayerNameFormText] = React.useState('');\n  const [players, setPlayers] = React.useState([]);\n  const [isShowPlayersLocation, setIsShowPlayersLocation] = React.useState(false);\n  const [errorNumberOfPlayerText, setErrorNumberOfPlayerText] = React.useState('');\n  const [isValidNumberOfPlayers, setIsValidNumberOfPlayers] = React.useState(true);\n\n  React.useEffect(() => {\n    if (isStarted) {\n      let timerId = setInterval(() => {\n        if (seconds > 0) {\n          setSeconds((secondsPrev) => secondsPrev - 1);\n        }\n      }, 1000);\n      setTimerId(timerId);\n    }\n  }, [isStarted]);\n\n  React.useEffect(() => {\n    if (seconds == 0) {\n      clearTimeout(timerId);\n    }\n    if (seconds < 5) {\n      bridge.send('VKWebAppFlashSetLevel', { level: 1 });\n    }\n  }, [seconds]);\n\n  const isDrawSpy = () => {\n    if (numberOfSpysToPick === 0) {\n      return false;\n    } else {\n      const probToPickSpy = numberOfSpys / numberOfPlayersToPickCard;\n      const prob = Math.random();\n      if (prob < probToPickSpy) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n\n  const pickLocation = () => {\n    if (!isDrawSpy()) {\n      const randomPickedLocation =\n        locationsToDraw[Math.floor(Math.random() * locationsToDraw.length)];\n      setPickedLocation(randomPickedLocation);\n      setLocationsToDraw(locationsToDraw.filter((location) => randomPickedLocation !== location));\n      setPlayers((playersPrev) => [\n        ...playersPrev,\n        { name: playerNameFormText, location: randomPickedLocation },\n      ]);\n    } else {\n      setPickedLocation('Вы шпион');\n      setNumberOfSpysToPick(numberOfSpysToPick - 1);\n      setPlayers((playersPrev) => [\n        ...playersPrev,\n        { name: playerNameFormText, location: 'Шпион' },\n      ]);\n    }\n    setPlayerNameFormText('');\n    setIsPickingLocation(false);\n  };\n\n  const submitLocation = () => {\n    if (numberOfPlayersToPickCard - 1 === 0) {\n      setIsStarted(true);\n    }\n    setNumberOfPlayersToPickCard(numberOfPlayersToPickCard - 1);\n    setIsPickingLocation(true);\n  };\n\n  const submitNumberOfPlayers = (numberOfPlayers) => {\n    setNumberOfPlayers(numberOfPlayers);\n    setNumberOfPlayersToPickCard(numberOfPlayers);\n    setSeconds(60 * numberOfPlayers);\n    if (numberOfPlayers > 6) {\n      setNumberOfSpys(2);\n      setNumberOfSpysToPick(2);\n    } else {\n      setNumberOfSpys(1);\n      setNumberOfSpysToPick(1);\n    }\n  };\n\n  const addLocation = () => {\n    if (!locationFormText) {\n      setErrorFormText('Поле не должно быть пустым');\n      return;\n    } else {\n      setErrorFormText('');\n    }\n    const isSameLocationName = allLocations.filter((location) => location == locationFormText);\n    console.log(isSameLocationName.length > 0);\n    if (isSameLocationName.length > 0) {\n      setErrorFormText('Такое название локации уже существет!');\n    } else {\n      setAllLocations([...allLocations, locationFormText]);\n      setLocationFormText('');\n      setErrorFormText('');\n    }\n  };\n\n  const startChangeLocation = (locationName) => {\n    const index = allLocations.indexOf(locationName);\n    setIndexOfChangingLocation(index);\n    setLocationFormText(locationName);\n    setIsAddingLocation(false);\n  };\n\n  const changeLocation = () => {\n    const isSameLocationName = allLocations.filter((location) => location == locationFormText);\n\n    if (isSameLocationName.length > 0) {\n      setErrorFormText('Такое название локации уже существет!');\n    } else {\n      const copyArr = [...allLocations];\n      copyArr[indexOfChangingLocation] = locationFormText;\n      setAllLocations([...copyArr]);\n      setLocationFormText('');\n      setErrorFormText('');\n      setIsAddingLocation(true);\n    }\n  };\n\n  const cancelChangeLocation = () => {\n    setLocationFormText('');\n    setErrorFormText('');\n    setIsAddingLocation(true);\n  };\n\n  const deleteLocation = (locationName) => {\n    setAllLocations(allLocations.filter((location) => locationName !== location));\n  };\n\n  const checkNumberOfPlayers = React.useCallback(\n    (number) => {\n      if (!Number.isInteger(number)) {\n        return setErrorNumberOfPlayerText('Число игроков должно быть целым');\n      }\n      if (number < 1) {\n        setInputNumberOfPlayers(1);\n        return setErrorNumberOfPlayerText('Число игроков должно быть положительным');\n      }\n      if (number > locationsToDraw.length) {\n        setInputNumberOfPlayers(locationsToDraw.length);\n        return setErrorNumberOfPlayerText('Число игроков должно быть меньше числа локаций');\n      }\n      setInputNumberOfPlayers(number);\n      setErrorNumberOfPlayerText('');\n    },\n    [locationsToDraw],\n  );\n\n  React.useEffect(() => {\n    checkNumberOfPlayers(inputNumberOfPlayers);\n  }, [locationsToDraw]);\n\n  const onNumberOfPlayersChange = (e) => {\n    const value = +e.target.value;\n    checkNumberOfPlayers(value);\n  };\n\n  return (\n    <Panel id={id}>\n      <Group>\n        <Div>\n          {!numberOfPlayers && (\n            <>\n              <Div>\n                <FormItem top=\"Название локации\">\n                  <Input\n                    type=\"text\"\n                    value={locationFormText}\n                    onChange={(e) => {\n                      setLocationFormText(e.target.value);\n                    }}\n                    disabled={false}\n                  />\n                </FormItem>\n                <FormItem>\n                  {errorFormText}\n                  {!isAddingLocation && (\n                    <Input\n                      onClick={() => cancelChangeLocation()}\n                      type=\"button\"\n                      defaultValue=\"Отменить\"\n                      disabled={false}\n                    />\n                  )}\n                  <Input\n                    onClick={() => (isAddingLocation ? addLocation() : changeLocation())}\n                    type=\"button\"\n                    defaultValue={isAddingLocation ? 'Добавить' : 'Изменить'}\n                    disabled={false}\n                  />\n                </FormItem>\n                <h1>Все локации</h1>\n                <ul>\n                  {allLocations.map((location) => {\n                    return (\n                      <li\n                        key={location}\n                        style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <span>{location}</span>\n                        <div>\n                          <Button mode=\"secondary\" onClick={() => startChangeLocation(location)}>\n                            Изменить\n                          </Button>\n                          <Button mode=\"secondary\" onClick={() => deleteLocation(location)}>\n                            Удалить\n                          </Button>\n                        </div>\n                      </li>\n                    );\n                  })}\n                </ul>\n              </Div>\n              <h1>Введите количество игроков</h1>\n              <FormItem top=\"Количество игроков\">\n                <Input\n                  type=\"number\"\n                  value={inputNumberOfPlayers}\n                  onChange={onNumberOfPlayersChange}\n                  disabled={false}\n                  inputMode=\"numeric\"\n                />\n              </FormItem>\n              {errorNumberOfPlayerText}\n              <FormItem top=\"Подтвердить\">\n                <Input\n                  onClick={() => submitNumberOfPlayers(inputNumberOfPlayers)}\n                  type=\"button\"\n                  defaultValue=\"Подтвердить\"\n                  disabled={errorNumberOfPlayerText}\n                />\n              </FormItem>\n            </>\n          )}\n\n          {numberOfPlayers && (\n            <>\n              <h1>Осталось игроков для выдачи карт {numberOfPlayersToPickCard} </h1>\n              {numberOfPlayersToPickCard && (\n                <>\n                  {!isPickingLocation && (\n                    <>\n                      <span>Ваша локация:</span>\n                      <h1>{pickedLocation}</h1>\n                      <FormItem top=\"Передайте другому игроку телефон\">\n                        <Input\n                          onClick={() => submitLocation()}\n                          type=\"button\"\n                          defaultValue=\"Подтвердить\"\n                          disabled={false}\n                        />\n                      </FormItem>\n                    </>\n                  )}\n                  {isPickingLocation && (\n                    <>\n                      <FormItem top=\"Введите название игрока\">\n                        <Input\n                          type=\"text\"\n                          value={playerNameFormText}\n                          onChange={(e) => {\n                            setPlayerNameFormText(e.target.value);\n                          }}\n                          disabled={false}\n                        />\n                      </FormItem>\n                      <FormItem top={!playerNameFormText && 'Введите имя!'}>\n                        <Input\n                          onClick={() => pickLocation()}\n                          type=\"button\"\n                          defaultValue=\"Показать мою локацию\"\n                          disabled={!playerNameFormText}\n                        />\n                      </FormItem>\n                    </>\n                  )}\n                </>\n              )}\n\n              {!numberOfPlayersToPickCard && (\n                <>\n                  <SimpleCell\n                    Component=\"label\"\n                    after={\n                      <Switch\n                        value={isShowPlayersLocation}\n                        onChange={(e) => setIsShowPlayersLocation((prev) => !prev)}\n                      />\n                    }>\n                    Показать локации игроков\n                  </SimpleCell>\n\n                  <h1>Все игроки:</h1>\n                  {players.map((player) => (\n                    <div key={player.location}>\n                      {player.name}\n                      {isShowPlayersLocation && `: ${player.location}`}\n                    </div>\n                  ))}\n                </>\n              )}\n\n              {isStarted && (\n                <>\n                  <h1>Оставшееся время: {seconds} c.</h1>\n                </>\n              )}\n            </>\n          )}\n        </Div>\n      </Group>\n    </Panel>\n  );\n};\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {\n  View,\n  ScreenSpinner,\n  AdaptivityProvider,\n  AppRoot,\n  ConfigProvider,\n  SplitLayout,\n  SplitCol,\n} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n  const [scheme, setScheme] = useState('bright_light');\n  const [activePanel, setActivePanel] = useState('home');\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === 'VKWebAppUpdateConfig') {\n        setScheme(data.scheme);\n      }\n    });\n\n    async function fetchData() {\n      const user = await bridge.send('VKWebAppGetUserInfo');\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <ConfigProvider scheme={scheme}>\n      <AdaptivityProvider>\n        <AppRoot>\n          <SplitLayout popout={popout}>\n            <SplitCol>\n              <View activePanel={activePanel}>\n                <Home id=\"home\" fetchedUser={fetchedUser} go={go} />\n              </View>\n            </SplitCol>\n          </SplitLayout>\n        </AppRoot>\n      </AdaptivityProvider>\n    </ConfigProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}