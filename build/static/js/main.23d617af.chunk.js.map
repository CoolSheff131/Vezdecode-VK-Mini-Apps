{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","React","useState","allLocations","locationsToDraw","setLocationsToDraw","isPickingLocation","setIsPickingLocation","pickedLocation","setPickedLocation","numberOfPlayers","setNumberOfPlayers","numberOfPlayersToPickCard","setNumberOfPlayersToPickCard","inputNumberOfPlayers","setInputNumberOfPlayers","numberOfSpys","setNumberOfSpys","numberOfSpysToPick","setNumberOfSpysToPick","seconds","setSeconds","isStarted","setIsStarted","timerId","setTimerId","useEffect","setInterval","secondsPrev","console","log","clearTimeout","bridge","send","level","pickLocation","probToPickSpy","Math","random","isDrawSpy","randomPickedLocation","floor","length","filter","location","header","mode","before","photo_200","src","description","city","title","first_name","last_name","top","type","value","onChange","e","Number","isInteger","target","disabled","inputMode","onClick","submitNumberOfPlayers","defaultValue","map","stretched","size","Persik","props","left","className","persik","alt","App","scheme","setScheme","activePanel","setActivePanel","setUser","popout","setPopout","user","subscribe","detail","data","fetchData","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"8OAqOeA,EArNF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YACtB,EAAwCC,IAAMC,SAAS,CACrD,gHACA,+FACA,gHACA,mDACA,oDACA,oDACA,oDACA,oDACA,oDACA,oDACA,sDAXF,mBAAOC,EAAP,KAaA,GAbA,KAa8CF,IAAMC,SAASC,IAA7D,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAkDJ,IAAMC,UAAS,GAAjE,mBAAOI,EAAP,KAA0BC,EAA1B,KACA,EAA4CN,IAAMC,WAAlD,mBAAOM,EAAP,KAAuBC,EAAvB,KACA,EAA8CR,IAAMC,SAAS,GAA7D,mBAAOQ,EAAP,KAAwBC,EAAxB,KACA,EAAkEV,IAAMC,SAAS,GAAjF,mBAAOU,EAAP,KAAkCC,EAAlC,KACA,EAAwDZ,IAAMC,SAAS,GAAvE,mBAAOY,EAAP,KAA6BC,EAA7B,KACA,EAAwCd,IAAMC,SAAS,GAAvD,mBAAOc,EAAP,KAAqBC,EAArB,KACA,EAAoDhB,IAAMC,SAAS,GAAnE,mBAAOgB,EAAP,KAA2BC,EAA3B,KACA,EAA8BlB,IAAMC,SAAS,GAA7C,mBAAOkB,EAAP,KAAgBC,EAAhB,KACA,EAAkCpB,IAAMC,UAAS,GAAjD,mBAAOoB,EAAP,KAAkBC,EAAlB,KACA,EAA8BtB,IAAMC,SAAS,MAA7C,mBAAOsB,GAAP,KAAgBC,GAAhB,KAEAxB,IAAMyB,WAAU,WACd,GAAIJ,EAAW,CACb,IAAIE,EAAUG,aAAY,WACpBP,EAAU,GACZC,GAAW,SAACO,GAAD,OAAiBA,EAAc,OAE3C,KACHH,GAAWD,MAEZ,CAACF,IAEJrB,IAAMyB,WAAU,WACdG,QAAQC,IAAI,wCACZD,QAAQC,IAAIV,GACZS,QAAQC,IAAI,wCACG,GAAXV,GACFW,aAAaP,IAEXJ,EAAU,GACZY,IAAOC,KAAK,wBAAyB,CAAEC,MAAO,MAE/C,CAACd,IAEJ,IAcMe,GAAe,WACnB,GAfgB,WAChB,GAA2B,IAAvBjB,EACF,OAAO,EAEP,IAAMkB,EAAgBpB,EAAeJ,EAErC,OADayB,KAAKC,SACPF,EASRG,GAMH9B,EAAkB,+CAClBU,EAAsBD,EAAqB,OAP3B,CAChB,IAAMsB,EACJpC,EAAgBiC,KAAKI,MAAMJ,KAAKC,SAAWlC,EAAgBsC,SAC7DjC,EAAkB+B,GAClBnC,EAAmBD,EAAgBuC,QAAO,SAACC,GAAD,OAAcJ,IAAyBI,MAKnFrC,GAAqB,IAwBvB,OACE,eAAC,IAAD,CAAOT,GAAIA,EAAX,UACE,cAAC,IAAD,sBACCE,GACC,cAAC,IAAD,CAAO6C,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,8CAAf,SACE,cAAC,IAAD,CACEC,OAAQ/C,EAAYgD,UAAY,cAAC,IAAD,CAAQC,IAAKjD,EAAYgD,YAAgB,KACzEE,YAAalD,EAAYmD,MAAQnD,EAAYmD,KAAKC,MAAQpD,EAAYmD,KAAKC,MAAQ,GAFrF,mBAGMpD,EAAYqD,WAHlB,YAGgCrD,EAAYsD,eAKhD,eAAC,IAAD,CAAOT,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,wDAAf,WACIpC,GACA,qCACE,oLACA,cAAC,IAAD,CAAU6C,IAAI,0GAAd,SACE,cAAC,IAAD,CACEC,KAAK,SACLC,MAAO3C,EACP4C,SAAU,SAACC,GACLC,OAAOC,WAAWF,EAAEG,OAAOL,QAC7B1C,EAAwB4C,EAAEG,OAAOL,QAGrCM,UAAU,EACVC,UAAU,cAGd,cAAC,IAAD,CAAUT,IAAI,qEAAd,SACE,cAAC,IAAD,CACEU,QAAS,kBA7CO,SAACvD,GAC7BC,EAAmBD,GACnBG,EAA6BH,GAC7BW,EAAW,EAAIX,GACXA,EAAkB,GACpBO,EAAgB,GAChBE,EAAsB,KAEtBF,EAAgB,GAChBE,EAAsB,IAoCG+C,CAAsBpD,IACrC0C,KAAK,SACLW,aAAa,qEACbJ,UAAU,SAMjBrD,GACC,qCACE,+MAAsCE,EAAtC,OACCA,GACC,sCACIN,GACA,qCACE,qGACA,6BAAKE,IACL,cAAC,IAAD,CAAU+C,IAAI,oLAAd,SACE,cAAC,IAAD,CACEU,QAAS,kBAxEzBrD,EAA4B,IAAM,GACpCW,GAAa,GAEfV,EAA6BD,EAA4B,QACzDL,GAAqB,IAqEDiD,KAAK,SACLW,aAAa,qEACbJ,UAAU,SAKjBzD,GACC,mCACE,cAAC,IAAD,CAAUiD,IAAI,6CAAd,SACE,cAAC,IAAD,CACEU,QAAS,kBAAM9B,MACfqB,KAAK,SACLW,aAAa,iHACbJ,UAAU,YAQpBnD,GACA,mCACE,yJAIHU,GACC,mCACE,+HAAuBF,EAAvB,cAMPjB,EAAaiE,KAAI,SAACxB,GACjB,OAAO,6BAAoBA,GAAXA,MAGlB,cAAC,IAAD,UACE,cAAC,IAAD,CAAQyB,WAAS,EAACC,KAAK,IAAIxB,KAAK,YAAYmB,QAASlE,EAAI,UAAQ,SAAjE,iDC/MK,MAA0B,mCCwB1BwE,G,OAhBA,SAAAC,GAAK,OACnB,eAAC,IAAD,CAAO1E,GAAI0E,EAAM1E,GAAjB,UACC,cAAC,IAAD,CACC2E,KAAM,cAAC,IAAD,CAAiBR,QAASO,EAAMzE,GAAI,UAAQ,SADnD,oBAKA,qBAAK2E,UAAU,SAASzB,IAAK0B,EAAQC,IAAI,wBCoC5BC,EA3CH,WACX,MAA4B3E,mBAAS,gBAArC,mBAAO4E,EAAP,KAAeC,EAAf,KACA,EAAsC7E,mBAAS,QAA/C,mBAAO8E,EAAP,KAAoBC,EAApB,KACA,EAA+B/E,mBAAS,MAAxC,mBAAOF,EAAP,KAAoBkF,EAApB,KACA,EAA4BhF,mBAAS,cAAC,IAAD,CAAeoE,KAAK,WAAzD,mBAAOa,EAAP,KAAeC,EAAf,KAEA1D,qBAAU,WAAM,sDAOf,8GACoBM,IAAOC,KAAK,uBADhC,OACOoD,EADP,OAECH,EAAQG,GACRD,EAAU,MAHX,4CAPe,sBACfpD,IAAOsD,WAAU,YAAgC,IAAD,IAA5BC,OAAU/B,EAAkB,EAAlBA,KAAMgC,EAAY,EAAZA,KACtB,yBAAThC,GACHuB,EAAUS,EAAKV,WAHF,mCAYfW,KACE,IAEH,IAAM1F,EAAK,SAAA4D,GACVsB,EAAetB,EAAE+B,cAAcC,QAAQC,KAGxC,OACC,cAAC,IAAD,CAAgBd,OAAQA,EAAxB,SACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAaK,OAAQA,EAArB,SACC,cAAC,IAAD,UACC,eAAC,IAAD,CAAMH,YAAaA,EAAnB,UACC,cAAC,EAAD,CAAMlF,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,cAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,kBCnChCiC,IAAOC,KAAK,gBAEZ4D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.23d617af.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport bridge from '@vkontakte/vk-bridge';\nimport {\n  Panel,\n  PanelHeader,\n  Header,\n  Button,\n  Group,\n  Cell,\n  Div,\n  Input,\n  FormItem,\n  Avatar,\n} from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser }) => {\n  const [allLocations, setAllLocations] = React.useState([\n    'Орбитальная станция',\n    'Вечеринка в клубе',\n    'войско крестоносцев',\n    'больница',\n    'больница1',\n    'больница2',\n    'больница3',\n    'больница4',\n    'больница5',\n    'больница6',\n    'больница7',\n  ]);\n  const [locationsToDraw, setLocationsToDraw] = React.useState(allLocations);\n  const [isPickingLocation, setIsPickingLocation] = React.useState(true);\n  const [pickedLocation, setPickedLocation] = React.useState();\n  const [numberOfPlayers, setNumberOfPlayers] = React.useState(0);\n  const [numberOfPlayersToPickCard, setNumberOfPlayersToPickCard] = React.useState(0);\n  const [inputNumberOfPlayers, setInputNumberOfPlayers] = React.useState(1);\n  const [numberOfSpys, setNumberOfSpys] = React.useState(1);\n  const [numberOfSpysToPick, setNumberOfSpysToPick] = React.useState(1);\n  const [seconds, setSeconds] = React.useState(0);\n  const [isStarted, setIsStarted] = React.useState(false);\n  const [timerId, setTimerId] = React.useState(null);\n\n  React.useEffect(() => {\n    if (isStarted) {\n      let timerId = setInterval(() => {\n        if (seconds > 0) {\n          setSeconds((secondsPrev) => secondsPrev - 1);\n        }\n      }, 1000);\n      setTimerId(timerId);\n    }\n  }, [isStarted]);\n\n  React.useEffect(() => {\n    console.log('====================================');\n    console.log(seconds);\n    console.log('====================================');\n    if (seconds == 0) {\n      clearTimeout(timerId);\n    }\n    if (seconds < 5) {\n      bridge.send('VKWebAppFlashSetLevel', { level: 1 });\n    }\n  }, [seconds]);\n\n  const isDrawSpy = () => {\n    if (numberOfSpysToPick === 0) {\n      return false;\n    } else {\n      const probToPickSpy = numberOfSpys / numberOfPlayersToPickCard;\n      const prob = Math.random();\n      if (prob < probToPickSpy) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n\n  const pickLocation = () => {\n    if (!isDrawSpy()) {\n      const randomPickedLocation =\n        locationsToDraw[Math.floor(Math.random() * locationsToDraw.length)];\n      setPickedLocation(randomPickedLocation);\n      setLocationsToDraw(locationsToDraw.filter((location) => randomPickedLocation !== location));\n    } else {\n      setPickedLocation('Вы шпион');\n      setNumberOfSpysToPick(numberOfSpysToPick - 1);\n    }\n    setIsPickingLocation(false);\n  };\n\n  const submitLocation = () => {\n    if (numberOfPlayersToPickCard - 1 === 0) {\n      setIsStarted(true);\n    }\n    setNumberOfPlayersToPickCard(numberOfPlayersToPickCard - 1);\n    setIsPickingLocation(true);\n  };\n\n  const submitNumberOfPlayers = (numberOfPlayers) => {\n    setNumberOfPlayers(numberOfPlayers);\n    setNumberOfPlayersToPickCard(numberOfPlayers);\n    setSeconds(6 * numberOfPlayers);\n    if (numberOfPlayers > 6) {\n      setNumberOfSpys(2);\n      setNumberOfSpysToPick(2);\n    } else {\n      setNumberOfSpys(1);\n      setNumberOfSpysToPick(1);\n    }\n  };\n\n  return (\n    <Panel id={id}>\n      <PanelHeader>Example</PanelHeader>\n      {fetchedUser && (\n        <Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n          <Cell\n            before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200} /> : null}\n            description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}>\n            {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n          </Cell>\n        </Group>\n      )}\n\n      <Group header={<Header mode=\"secondary\">Локации</Header>}>\n        {!numberOfPlayers && (\n          <>\n            <h1>Введите количество игроков</h1>\n            <FormItem top=\"Количество игроков\">\n              <Input\n                type=\"number\"\n                value={inputNumberOfPlayers}\n                onChange={(e) => {\n                  if (Number.isInteger(+e.target.value)) {\n                    setInputNumberOfPlayers(e.target.value);\n                  }\n                }}\n                disabled={false}\n                inputMode=\"numeric\"\n              />\n            </FormItem>\n            <FormItem top=\"Подтвердить\">\n              <Input\n                onClick={() => submitNumberOfPlayers(inputNumberOfPlayers)}\n                type=\"button\"\n                defaultValue=\"Подтвердить\"\n                disabled={false}\n              />\n            </FormItem>\n          </>\n        )}\n\n        {numberOfPlayers && (\n          <>\n            <h1>Осталось игроков для выдачи карт {numberOfPlayersToPickCard} </h1>\n            {numberOfPlayersToPickCard && (\n              <>\n                {!isPickingLocation && (\n                  <>\n                    <h2>Ваша локация</h2>\n                    <h1>{pickedLocation}</h1>\n                    <FormItem top=\"Передайте другому игроку телефон\">\n                      <Input\n                        onClick={() => submitLocation()}\n                        type=\"button\"\n                        defaultValue=\"Подтвердить\"\n                        disabled={false}\n                      />\n                    </FormItem>\n                  </>\n                )}\n                {isPickingLocation && (\n                  <>\n                    <FormItem top=\"Локация\">\n                      <Input\n                        onClick={() => pickLocation()}\n                        type=\"button\"\n                        defaultValue=\"Показать мою локацию\"\n                        disabled={false}\n                      />\n                    </FormItem>\n                  </>\n                )}\n              </>\n            )}\n\n            {!numberOfPlayersToPickCard && (\n              <>\n                <h1>Все игроки взяли карту</h1>\n              </>\n            )}\n\n            {isStarted && (\n              <>\n                <h1>Оставшееся время: {seconds} c.</h1>\n              </>\n            )}\n          </>\n        )}\n\n        {allLocations.map((location) => {\n          return <h1 key={location}>{location}</h1>;\n        })}\n\n        <Div>\n          <Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n            Show me the Persik, please\n          </Button>\n        </Div>\n      </Group>\n    </Panel>\n  );\n};\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}